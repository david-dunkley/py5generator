@@ meta
name = ortho()
category = lights_camera
subcategory = camera
type = method
pclass = PApplet
processing_name = ortho

@@ signatures
ortho() -> None
ortho(left: float, right: float, bottom: float, top: float, /) -> None
ortho(left: float, right: float, bottom: float, top: float, near: float, far: float, /) -> None

@@ variables
bottom: float - bottom plane of the clipping volume
far: float - distance from the viewer to the farthest clipping plane
left: float - left plane of the clipping volume
near: float - distance from the viewer to the nearest clipping plane
right: float - right plane of the clipping volume
top: float - top plane of the clipping volume

@@ description
Sets an orthographic projection and defines a parallel clipping volume. All objects with the same dimension appear the same size, regardless of whether they are near or far from the camera. The parameters to this function specify the clipping volume where left and right are the minimum and maximum x values, top and bottom are the minimum and maximum y values, and near and far are the minimum and maximum z values. If no parameters are given, the default is used: `ortho(-width/2, width/2, -height/2, height/2)`.

@@ example
image = Sketch_ortho_0.png

def setup():
    py5.size(100, 100, py5.P3D)
    py5.no_fill()
    py5.ortho(-py5.width//2, py5.width//2,
              -py5.height // 2, py5.height//2)  # same as ortho()
    py5.translate(py5.width//2, py5.height//2, 0)
    py5.rotate_x(-py5.PI/6)
    py5.rotate_y(py5.PI/3)
    py5.box(45)
